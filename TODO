- use malloc/free when moving blocks to/from GPU. This way the GPU node does not need as much memory (but we can use swap...)
- write kernels in .h files that can be included by both openmp and cuda code.
- try using local memory for derivatives in CUDA (avoid jumping in memory)
- CUDA performance of Crank-Nicolson is poor... too complex kernels, parameter tuning?
- Poisson solver for other than periodic BC
- Fortran support: iso_c_binding, interface / end interface.
- CUDA: most things have periodic BCs hardwired...
- mem2gpu and gpu2mem/mem2gpu are missing suffled copy (not usually needed). For mem2gpu we need to track in which space we are so that we can upload the data to GPU in the correct subformat.

also fgrep TODO *.[ch] to find out more specific issues.
